<?php
// $Id$

/**
 * @file
 * Provides Community Media Checklist functions
 */

/**
 * Implements hook_menu().
 */
function cm_checklist_menu() {
  
  // Adds Community Media Section to Admin Interface
  // Duplicated in cm_show and cm_project, first module installed creates the link
  if (!module_exists('cm_show') && !module_exists('cm_project')) {
    $items['admin/config/communitymedia'] = array(
      'title' => 'Community Media',
      'description' => 'Configuration options for Community Media modules',
      'position' => 'right',
      'page callback' => 'system_admin_menu_block_page',
      'access arguments' => array('access administration pages'),
      'file' => 'system.admin.inc',
      'file path' => drupal_get_path('module', 'system'),
      'weight' => -99,
    );
  }

  $items['admin/config/communitymedia/checklist'] = array(
    'title' => 'Configuration Checklist',
    'description' => 'Display configuration status',
    'page callback' => 'cm_checklist_main',
    'access arguments' => array('access administration pages'),
    'weight' => -99,
    'file' => 'cm_checklist.admin.inc',
  );
  
/*


  foreach (module_implements('help', TRUE) as $module) {
    $items['admin/openmedia/checklist/' . $module] = array(
      'title' => $module,
      'page callback' => 'cm_checklist_page',
      'page arguments' => array(2),
      'access arguments' => array('access administration pages'),
      'type' => MENU_CALLBACK,
      'file' => 'cm_checklist.admin.inc',
    );
  }

*/
  return $items;
}

/**
 * Implements hook_help().
 */
function cm_checklist_help($path, $arg) {
  switch ($path) {
    case 'admin/configure/communitymedia/checklist':
      $output = '<p>' . t('The Open Media System is designed to be implemented incrementally based on each station\'s needs.  This is not an exhaustive checklist, but designed to help you work through the configuration process.') . '</p>';
      
      return $output;
  }
}

/**
 * Checks the Status of the CiviCRM configuration.
 */
function cm_checklist_civicrm_status(){
 
  //CHECK 1 - CiviGroup Roles or CiviGroup Group Sync configured?
  if (!module_exists('civicrm_member_roles') && !module_exists('civicrm_group_roles') ) {
    $status = array(
    'description' => 'CiviCRM is installed, but neither CiviGroup Roles and CiviGroup Group Sync are configured.  This is how information membership and certification information is shared between Drupal and CiviCRM.  <a href="http://drupal.org/node/1013546">Step by step instructions for configuring CiviGroup Roles and CiviGroup Group Sync</a>',
    'severity' => 2,);
    return $status;
  }
  
  //if there are no problems, return this
  $status = array(
    'description' => 'See the <a href="/civicrm/admin/configtask">CiviCRM configuration checklist</a> for additional steps to that configuration.',
    'severity' => 0,);
  return $status;
}

/**
 * Checks the Status of the Reservations configuration.
 */
function cm_checklist_reservations_status(){
  
  //CHECK 1 - Check to see if any content types have been created
  $reservations_item_count = db_query("SELECT COUNT(type) FROM {reservations_node_type} WHERE reservations_type_setting = :bucket OR reservations_type_setting = :resource", array(':bucket' => 'bucket', ':resource' => 'resource'))->fetchField();
  
  if (!$reservations_item_count) {
    $status = array(
    'description' => 'You have not configured any content types to be Buckets or Resources.  Please follow the <a href="http://drupal.org/node/1043510">step by step instructions for configuring Reservations managed content types</a>',
    'severity' => 2,);
    return $status;
  }
  
  //if there are no problems, return this
  $status = array(
    'description' => 'Reservations is configured correctly.',
    'severity' => 0,);
  return $status;
}
